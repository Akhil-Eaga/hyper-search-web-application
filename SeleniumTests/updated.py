# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestApp():
  def setup_method(self, method,path):
    self.driver = webdriver.Chrome(path)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 500))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_adminFetchUserDetails(self):
    self.driver.get("http://127.0.0.1:5000/admin_login")
    self.driver.set_window_size(1896, 965)
    self.driver.find_element(By.ID, "username").send_keys("admin1")
    self.driver.find_element(By.ID, "password").send_keys("adminadmin")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".column-content > .btn-primary").click()
    self.driver.find_element(By.CSS_SELECTOR, ".close-button-container > .btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".active > .nav-link").click()
    self.driver.close()
  
  def test_adminLogin(self):
    self.driver.get("http://127.0.0.1:5000/admin_login")
    self.driver.set_window_size(1896, 965)
    self.driver.find_element(By.ID, "username").send_keys("admin1")
    self.driver.find_element(By.ID, "password").send_keys("adminadmin")
    self.driver.find_element(By.ID, "remember").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".container > h1").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".container > h1").text == "Welcome to admin dashboard"
    self.driver.close()
  
  def test_adminLogout(self):
    self.driver.get("http://127.0.0.1:5000/admin_login")
    self.driver.set_window_size(1896, 965)
    self.driver.find_element(By.ID, "username").click()
    self.driver.find_element(By.ID, "username").send_keys("admin1")
    self.driver.find_element(By.ID, "password").send_keys("adminadmin")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".active > .nav-link").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".btn").text == "Get started"
    self.driver.close()
  
  def test_existingUserConflict(self):
    self.driver.get("http://127.0.0.1:5000/signup")
    self.driver.set_window_size(1896, 965)
    self.driver.find_element(By.ID, "email").send_keys("user@username.com")
    self.driver.find_element(By.ID, "username").send_keys("myusername")
    self.driver.find_element(By.ID, "password").send_keys("mypassword")
    self.driver.find_element(By.ID, "password").send_keys("mypassword")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    text = self.driver.find_element(By.CSS_SELECTOR, "h1").text
    assert text != "Welcome, Myusername"
    self.driver.close()
  
  def test_existingUserWrongPassword(self):
    self.driver.get("http://127.0.0.1:5000/login")
    self.driver.set_window_size(1896, 965)
    self.driver.find_element(By.ID, "username").click()
    self.driver.find_element(By.ID, "username").send_keys("myusername")
    self.driver.find_element(By.ID, "password").send_keys("wrongpassowrd")
    self.driver.find_element(By.ID, "remember").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".btn").text == "Sign in"
    text = self.driver.find_element(By.CSS_SELECTOR, "h1").text
    assert text != "Welcome, Myusername"
    self.driver.close()
  
  def test_newUsershortpassword(self):
    self.driver.get("http://127.0.0.1:5000/signup")
    self.driver.set_window_size(1896, 965)
    self.driver.find_element(By.ID, "email").send_keys("username2@gmail.com")
    self.driver.find_element(By.ID, "username").send_keys("username2")
    self.driver.find_element(By.ID, "password").send_keys("short")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".btn").text == "Register"
    self.driver.find_element(By.CSS_SELECTOR, ".signuppage-form-container").click()
    elements = self.driver.find_elements(By.CSS_SELECTOR, ".errors > li")
    assert len(elements) > 0
    assert self.driver.find_element(By.CSS_SELECTOR, ".errors > li").text == "Password should be atleast 8 characters long"
    text = self.driver.find_element(By.CSS_SELECTOR, "h1").text
    assert text != "Welcome, Myusername"
    self.driver.close()
  
  def test_userExcerices(self):
    self.driver.get("http://127.0.0.1:5000/login")
    self.driver.set_window_size(1896, 965)
    self.driver.find_element(By.ID, "username").click()
    self.driver.find_element(By.ID, "username").send_keys("myusername")
    self.driver.find_element(By.ID, "password").send_keys("mypassword")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.LINK_TEXT, "Exercises").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-prev-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-prev-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-prev-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-prev-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-prev-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-prev-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-prev-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-prev-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-prev-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-prev-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-prev-icon").click()
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-prev-icon").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".intro-slide .gSearch-btn").click()
    self.vars["win792"] = self.wait_for_window(2000)
    self.vars["root"] = self.driver.current_window_handle
    self.driver.switch_to.window(self.vars["win792"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".active .gSearch-btn").click()
    self.vars["win5340"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win5340"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".active .gSearch-btn").click()
    self.vars["win7151"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win7151"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".active .gSearch-btn").click()
    self.vars["win9015"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win9015"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".active .gSearch-btn").click()
    self.vars["win5248"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win5248"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".active .gSearch-btn").click()
    self.vars["win4659"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win4659"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".active .gSearch-btn").click()
    self.vars["win6123"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win6123"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".active .gSearch-btn").click()
    self.vars["win7041"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win7041"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".active .gSearch-btn").click()
    self.vars["win7156"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win7156"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".active .gSearch-btn").click()
    self.vars["win3352"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win3352"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".active .gSearch-btn").click()
    self.vars["win1496"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win1496"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.CSS_SELECTOR, ".carousel-control-next-icon").click()
    assert self.driver.find_element(By.LINK_TEXT, "Take the quiz").text == "Take the quiz"
    self.driver.close()
  
  def test_userLoginSuccess(self):
    self.driver.get("http://127.0.0.1:5000/login")
    self.driver.set_window_size(1896, 965)
    self.driver.find_element(By.ID, "username").send_keys("myusername")
    self.driver.find_element(By.ID, "password").send_keys("mypassword")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    assert self.driver.find_element(By.CSS_SELECTOR, "h1").text == "Welcome, Myusername"
    elements = self.driver.find_elements(By.CSS_SELECTOR, ".start-learning-link-container")
    assert len(elements) > 0
    elements = self.driver.find_elements(By.LINK_TEXT, "Jump into learning")
    assert len(elements) > 0
  
  def test_userLogoutSuccess(self):
    self.driver.get("http://127.0.0.1:5000/login")
    self.driver.set_window_size(1896, 965)
    self.driver.find_element(By.ID, "username").send_keys("myusername")
    self.driver.find_element(By.ID, "password").send_keys("mypassword")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.LINK_TEXT, "Myusername\'s Dashboard").click()
    self.driver.find_element(By.LINK_TEXT, "Exercises").click()
    self.driver.find_element(By.LINK_TEXT, "Quiz").click()
    self.driver.find_element(By.LINK_TEXT, "HyperSearch").click()
    self.driver.find_element(By.CSS_SELECTOR, ".active > .nav-link").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".btn").text == "Get started"
    self.driver.close()
  
  def test_userQuiz(self):
    self.driver.get("http://127.0.0.1:5000/login")
    self.driver.set_window_size(1896, 965)
    self.driver.find_element(By.ID, "username").send_keys("myusername")
    self.driver.find_element(By.ID, "password").send_keys("mypassword")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.LINK_TEXT, "Quiz").click()
    self.driver.find_element(By.CSS_SELECTOR, ".button-container:nth-child(6) > .btn:nth-child(1)").click()
    self.driver.find_element(By.ID, "0").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "2").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "0").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "2").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "0").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "2").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "1").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "2").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "0").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "2").click()
    self.driver.find_element(By.ID, "next-btn").click()
    elements = self.driver.find_elements(By.CSS_SELECTOR, ".result-box .btn:nth-child(2)")
    assert len(elements) > 0
    assert self.driver.find_element(By.CSS_SELECTOR, ".result-box .btn:nth-child(2)").text == "Dashboard"
    self.driver.close()
  
  def test_userQuizTryagain(self):
    self.driver.get("http://127.0.0.1:5000/login")
    self.driver.set_window_size(1896, 965)
    self.driver.find_element(By.ID, "username").send_keys("myusername")
    self.driver.find_element(By.ID, "password").send_keys("mypassword")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.LINK_TEXT, "Quiz").click()
    self.driver.find_element(By.CSS_SELECTOR, ".button-container:nth-child(6) > .btn:nth-child(1)").click()
    self.driver.find_element(By.ID, "0").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "2").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "0").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "2").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "0").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "2").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "1").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "2").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "0").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "2").click()
    self.driver.find_element(By.ID, "next-btn").click()
    elements = self.driver.find_elements(By.CSS_SELECTOR, ".result-box .btn:nth-child(2)")
    assert len(elements) > 0
    assert self.driver.find_element(By.CSS_SELECTOR, ".result-box .btn:nth-child(2)").text == "Dashboard"
    self.driver.find_element(By.CSS_SELECTOR, ".result-box .btn:nth-child(1)").click()
    self.driver.find_element(By.ID, "1").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "0").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "2").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "2").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "2").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "1").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "1").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "1").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "1").click()
    self.driver.find_element(By.ID, "next-btn").click()
    self.driver.find_element(By.ID, "0").click()
    self.driver.find_element(By.ID, "next-btn").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".result-box .btn:nth-child(2)").text == "Dashboard"
    self.driver.close()
  
if __name__ == '__main__':
    app = TestApp()
    
    path = input("Enter path of chrome driver: ")
    #start
    app.setup_method("",path)
    
    #admin tests
    app.test_adminFetchUserDetails()
    app.test_adminLogin()
    app.test_adminLogout()
    
    #existing user in database
    app.test_existingUserConflict()
    app.test_existingUserWrongPassword()
    app.test_existingUserWrongPassword()
    app.test_newUsershortpassword()
    
    #current user tests
    app.test_userExcerices()
    app.test_userLoginSuccess()
    app.test_userLogoutSuccess()
    app.test_userQuiz()    
    
    #quit
    app.teardown_method("")